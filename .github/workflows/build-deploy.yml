name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    runs-on: ubuntu-latest
    steps:
      - name: pull git repo
        uses: actions/checkout@v3

      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install dependencies
        run: pip install -r requirements.txt

      - name: testing with pytest
        run: |
          pip install pytest
          pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/example-fastapi:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: deploy to ubuntu server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd app/src
          git pull
          echo ${{ secrets.SERVER_PASSWORD }} | sudo -S systemctl restart example-fastapi